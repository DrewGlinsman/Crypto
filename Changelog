2/1/18 Andrew Katson
Created CryptoData.py to independently initialize all the necessary text files with data
Created Changelog to track changes made over time more succinctly
Created AutoTrader. Actual bot that will run when we trade

Updated CryptoEvaluator and AutoTrader to use the new Parameter Dictionary

2/4/18

Updated CryptoTrainer to now pass input to the iterations of the bot
Can now read and use input inside of the subprocesses
Added a randomizer to CryptoTrainer to randomize the parameters

2/5/18
Added a resetParameters method to reset the parameters for each randomization
Added functionality for setting the parameters as the best stored ones in AutoTrader.py
Added a testing variable to auto trader that makes it not read in the BEST_PARAMETERS text file each time so that if im testing i can use the same values

2//7/18
Added storage of all the values for the parameters so that they may be scaled
Added a method to get the max of each of the parameters
Added MODIFIED_VOLUME_MODIFIER into the parameter list (an old parameter I had forgotten when I ported things
Added checks in case no currency is selected to be bought. In that case we just sell the current crypto and do nothing until the next check
Fixed bug where modified volumes were cancelling themeselves out and always returning 0
Added function to reset list of the values to be used to scale
Changed modified_volume dictionary to contain values not lists of one value

2/8/18
Added fully randomized parameters for each bot run
Fixed parser to only read lines of output that contain a special character printed right before the parameter list
Added  method reWriteParameters to rewrite the paramters onto the original text file they were pulled from after all the tests
Updated CryptoEvalutator to have have the values and MaxValues lists as well as the capability (From AutoTrader)
Added method stringtoDict that takes the string passed (should be the string conversion of a dictionary) and parses it and returns a new dictionary object
Added method reformatLine to takes the special string grabbed from output that contains the returned parameters. And removes the edge definer strings

2/9/18
Fixed the auto trader modified volume function so that it appropriately splits the volume up into separate cases where if it is positive or negative the majority of the
volume associated with that interval is considered "positive"  or "negative" respectively and the minority is considered "negative" or "positive" respectively

2/10/18
Made it so that neither buybin nor sellbin can be called if either the current crypto or the past one are nothing

2/11/18
Changed getBinancePrice to use the price api call instead of all prices so it no longer needs to iterate until it finds the coin just gets the specific coins most recent price.
Made synctatic fixes to auto trader
Fixed bug where auto trader was not printing the endprice when checking intervals
Added volume scaling by price for the update crypto in auto trader
Made a CryptoStatAnalysis class that is an object that stores decisions made by the trading bots and evaluates them and prints the results
Removed the file writing from CryptoEvaluator
Added special import to AutoTrader and an instance of the CrptoStatAnalysis class
Added initialization variables for the CryptoStatAnalyis class that hold score, mean percent price change, and different choice data
Added another class in CryptoStatAnalysis that holds different stats for each crypto
Got CryptoEvaluator to be API independent

Crypto Trainer no longer randomizes all params.

2/12/18
AutoTradeer now has a CryptoStatsAnalysis object initialized when it begins

2/13/18
Added a check for max Value being 0 to crypto evaluator and auto trader to try to fix the division by 0 bug

2/14/18
Added additional checks in crypto evaluator for passing a blank string to getbinanceprice that should help with key error issues
Added new modified volume calculation that uses the size of the percent to parition the volume for summation
Added checks in modififed volume calculation that in receives volumes that would result in a zero sum, it will just halve the smaller amount

2/16/18
Added some small fixes to make cryptoTrainer run multiple "classes" of evolution not just multiple variations of the bot

2/21/18
Added a oldcode text file to temporarily hold old code I haven't decided if I like yet
Added a function to crypto trainer to check if there are command line arguments and if there are it pulls out the number of desired classes and iterations

2/23/18
added more clarity to the functions in crypto stats
began implementation of the crypto stats analysis class into crypto evaluator
added a variation num parameter and a class num parameter
added a function to set up a stat Dictionary to be sent to crypto run to crypto evaluator
the crypto stats object for each crypto evaluator now creates a new dictionary with statistics from the run

2/24/18
added a set of new parameters that will give both a starting point for a test in the past as well as the interval length to train over

2/25/18
fixed the rewriting params method in crypto trainer to recognize a last value in the parameter list
fixed minor bugs that affected the resetting and proper randomization of parameters in crypto trainer

2/26/18
added a log file for the trainer

2/27/18
Added a check to the file rewriter where it will not keep printing if it finds that you are on the last string
Added some extra code to reverse all the crypto lists that are pulled from the crypto stats stored data

3/4/18
Added logs with their own files by day for trainer and evaluator
Added stream url generation to tester.py ans made the parts to test modular

3/10/18
Added new condition to evakuator for the exit condition
Converted all print statements to file writes in cryoto evaluator
Added tracker for the number of sells
Added tracker for all the decisions in terms of what is bought and sold
Added storage for the percent changes over the lifetime of owning all cryptos in increments and for whole consecutvie segments of time

3/11/18
added comments to the main method of cryptoevaluator
added the timestamp for the build logs method so it matches the cryptostatanalysis timestamp
added a special true price bought to make the outputed cumulative percent change equal to the correct change

3/12/18
added a special stats dictionary that will hold the total volume, score, and mean of each crypto for every cycle

3/23/18
fixed key error occuring when calculating % changes in crypto stat analyis
updated log system so the files are sepearted by the run of crypto trainer then class

3/25/18
overhauled automated log system so they are all under a common set of headings
fixed the error with indexes causing zero calculations
potentially fixed no cryptos picked crash error (not sure because it can still pick no crypto and not have crashed)

3/26/18
added a system to randomly choose which parameters to change

4/9/18
fixed timeHeld bug where it actually held the total amount of time that had gone by
implemented a dictionary to store input passed to crypto evaluator
crypto evaluator now reads and returns the parameters through pickle files
crypto trainer now reads and writes to pickles files
all legacy reading and writing to the parameter files and passed parameters in input stream removed from crypto trainer and evaluator
runtime, mode, pickle param path, classnum, and variation num are passed through an input stream to evaluator